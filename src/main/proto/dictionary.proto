/************************************************************************************
 * Copyright (C) 2012-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.dictionary";
option java_outer_classname = "ADempiereDictionary";

import "google/api/annotations.proto";

package dictionary;

// The greeting service definition.
service Dictionary {
	// Request a Window
	rpc GetWindow(EntityRequest) returns (Window) {
		option (google.api.http) = { get: "/dictionary/windows/{id}" };
	}
	// Request a Tab
	rpc GetTab(EntityRequest) returns (Tab) {
		option (google.api.http) = { get: "/dictionary/tabs/{id}" };
	}
	// Request a Field
	rpc GetField(FieldRequest) returns (Field) {
		option (google.api.http) = {
			get: "/dictionary/fields/{id}"
			additional_bindings: {
				get: "/dictionary/fields/{table_name}/{column_name}"
			}
			additional_bindings: {
				get: "/dictionary/fields/column/{column_id}"
			}
			additional_bindings: {
				get: "/dictionary/fields/element/{element_id}"
			}
			additional_bindings: {
				get: "/dictionary/fields/element/column/{element_column_name}"
			}
		};
	}
	// Reference Request
	rpc GetReference(ReferenceRequest) returns (Reference) {
		option (google.api.http) = { get: "/dictionary/references/{id}" };
	}
	// Request Process/Report
	rpc GetProcess(EntityRequest) returns (Process) {
		option (google.api.http) = {
			get: "/dictionary/processes/{id}"
			additional_bindings: {
				get: "/dictionary/reports/{id}"
			}
		};
	}
	// Request Browser
	rpc GetBrowser(EntityRequest) returns (Browser) {
		option (google.api.http) = { get: "/dictionary/browsers/{id}" };
	}
	// Get Form
	rpc GetForm(EntityRequest) returns (Form) {
		option (google.api.http) = { get: "/dictionary/forms/{id}" };
	}
	// List Search Info Fields
	rpc ListSearchInfoFields(ListFieldsRequest) returns (ListFieldsResponse) {
		option (google.api.http) = { get: "/dictionary/search-info-fields/{table_name}" };
	}
	rpc ListIdentifiersFields(ListFieldsRequest) returns (ListFieldsResponse) {
		option (google.api.http) = { get: "/dictionary/identifier-fields/{table_name}" };
	}
	rpc ListTableSearchFields(ListFieldsRequest) returns (ListFieldsResponse) {
		option (google.api.http) = { get: "/dictionary/table-search-fields/{table_name}" };
	}
}

// Object request
message EntityRequest {
	int32 id = 1;
}

// Field request
message FieldRequest {
	int32 id = 1;
	int32 column_id = 2;
	int32 element_id = 3;
	string element_column_name = 4;
	// Table_name + _column_name
	string table_name = 5;
	string column_name = 6;
}

// Reference request
message ReferenceRequest {
	int32 id = 1;
	// Table_name + column_name assumed that it is Table Direct
	string column_name = 2;
}

// Window
message Window {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string help = 4;
	bool is_active = 5;
	bool is_sales_transaction = 6;
	string window_type = 7;
	//	External Info
	ContextInfo context_info = 8;
	repeated Tab tabs = 9;
	string uuid = 10;
}

// Tab
message Tab {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string help = 4;
	// Attributes
	string table_name = 5;
	int32 sequence = 6;
	int32 tab_level = 7;
	//
	bool is_active = 8;
	bool is_single_row = 9;
	bool is_advanced_tab = 10;
	bool is_has_tree = 11;
	bool is_info_tab = 12;
	bool is_sort_tab = 13;
	bool is_translation_tab = 14;
	bool is_read_only = 15;
	bool is_insert_record = 16;
	bool is_view = 17;
	bool is_deleteable = 18;
	bool is_document = 19;
	bool is_change_log = 20;
	int32 access_level = 21;
	string link_column_name = 22;
	string sort_order_column_name = 23;
	string sort_yes_no_column_name = 24;
	string parent_column_name = 25;
	string display_logic = 26;
	string commit_warning = 27;
	int32 parent_tab_id = 28;
	repeated string context_column_names = 29;
	// External Info
	ContextInfo context_info = 30;
	repeated Process processes = 31;
	repeated Field fields = 32;
	FieldGroup field_group = 33;
	string read_only_logic = 34;
	string uuid = 35;
	repeated string key_columns = 36;
}

// Field
message Field {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string help = 4;
	int32 sequence = 5;
	string column_name = 6;
	string element_name = 7;
	bool is_displayed = 8;
	bool is_displayed_grid = 9;
	bool is_read_only = 10;
	bool is_allow_copy = 11;
	bool is_encrypted = 12;
	bool is_same_line = 13;
	bool is_heading = 14;
	bool is_field_only = 15;
	bool is_quick_entry = 16;
	bool is_mandatory = 17;
	bool is_key = 18;
	bool is_parent = 19;
	bool is_updateable = 20;
	bool is_identifier = 21;
	bool is_allow_logging = 22;
	bool is_selection_column = 23;
	bool is_range = 24;
	bool is_always_updateable = 25;
	bool is_translated = 26;
	int32 identifier_sequence = 27;
	string display_logic = 28;
	int32 display_type = 29;
	string default_value = 30;
	string read_only_logic = 31;
	string mandatory_logic = 32;
	string callout = 33;
	string column_sql = 34;
	string v_format = 35;
	string value_min = 36;
	string value_max = 37;
	string format_pattern = 38;
	// External Info
	ContextInfo context_info = 39;
	FieldGroup field_group = 40;
	FieldDefinition field_definition = 41;
	Reference reference = 42;
	Process process = 43;
	// Smart Browser Field Compatibility
	bool is_query_criteria = 44;
	bool is_order_by = 45;
	int32 seq_no_grid = 46;
	int32 sort_no = 47;
	bool is_info_only = 48;
	bool is_active = 49;
	// Process Parameter Compatibility
	string default_value_to = 50;
	int32 field_length = 51;
	repeated string context_column_names = 52;
	int32 column_id = 53;
	int32 element_id = 54;
	repeated DependentField dependent_fields = 55;
	// ASP Custom Attributes
	string is_displayed_as_panel = 56;
	string is_displayed_as_table = 57;
	string uuid = 58;
}

message DependentField {
	int32 container_id = 1;
	string container_uuid = 2;
	string container_name = 3;
	int32 id = 4;
	string uuid = 5;
	string column_name = 6;
}

// Context Info
message ContextInfo {
	int32 id = 1;
	string name = 2;
	string description = 3;
	MessageText message_text = 4;
	string sql_statement = 5;
	bool is_active = 6;
	string uuid = 7;
}

// Message
message MessageText {
	int32 id = 1;
	string value = 2;
	string message_type = 3;
	string message_text = 4;
	string message_tip = 5;
	bool is_active = 6;
	string uuid = 7;
}

// Context Info
message FieldGroup {
	int32 id = 1;
	string name = 2;
	string field_group_type = 3;
	bool is_active = 4;
	string uuid = 5;
}

// Context Info
message FieldDefinition {
	int32 id = 1;
	string value = 2;
	string name = 3;
	string field_group_type = 4;
	repeated FieldCondition conditions = 5;
	bool is_active = 6;
	string uuid = 7;
}

// Field Condition
message FieldCondition {
	int32 id = 1;
	string condition = 2;
	string stylesheet = 3;
	bool is_active = 4;
	string uuid = 5;
}

// Process
message Process {
	int32 id = 1;
	string value = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	bool is_report = 6;
	int32 access_level = 7;
	string show_help = 8;
	bool is_direct_print = 9;
	repeated Field parameters = 10;
	bool is_active = 11;
	// Reporty Type
	repeated ReportExportType report_export_types = 12;
	int32 browser_id = 13;
	int32 form_id = 14;
	int32 workflow_id = 15;
	string uuid = 16;
	bool is_have_parameres = 17;
}

// Form
message Form {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string help = 4;
	int32 access_level = 5;
	string file_name = 6;
	bool is_active = 7;
	string uuid = 8;
}

// Smart Browser
message Browser {
	int32 id = 1;
	string value = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	int32 access_level = 6;
	repeated string context_column_names = 7;
	bool is_updateable = 8;
	bool is_deleteable = 9;
	bool is_selected_by_default = 10;
	bool is_collapsible_by_default = 11;
	bool is_executed_query_by_default = 12;
	bool is_show_total = 13;
	int32 view_id = 14;
	// External Reference
	Window window = 15;
	Process process = 16;
	repeated Field fields = 17;
	bool is_active = 18;
	string table_name = 19;
	string uuid = 20;
	string field_key = 21;
}

// Zoom Window
message ZoomWindow {
	int32 id = 1;
	string name = 2;
	string description = 3;
	bool is_sales_transaction = 4;
	bool is_active = 5;
}

// Foreign Reference
message Reference {
	string table_name = 1;
	string key_column_name = 2;
	string display_column_name = 3;
	repeated string context_column_names = 4;
	// External Info
	repeated ZoomWindow zoom_windows = 5;
	int32 id = 6;
}

// Report Type for Export
message ReportExportType {
	string name = 1;
	string description = 2;
	string type = 3;
}

message ListFieldsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
}

message ListFieldsResponse {
	int64 record_count = 1;
	repeated Field fields = 2;
	string next_page_token = 3;
}
