/************************************************************************************
 * Copyright (C) 2018-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Edwin Betancourt EdwinBetanc0urt@outlook.com                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.form.bank_statement_match";
option java_outer_classname = "ADempiereBankStatementMatch";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "base_data_type.proto";

// Base URL
// /bank-statement-match/

package bank_statement_match;

// The Banck Statement Match form service definition.
// - org.spin.apps.form.BankStatementMatchController
// - org.spin.apps.form.VBankStatementMatch
// - org.spin.apps.form.WBankStatementMatch
service BankStatementMatch {
	// lists criteria
	rpc GetBankStatement(GetBankStatementRequest) returns (BankStatement) {
		option (google.api.http) = { get: "/bank-statement-match/bank-statements/{id}" };
	}
	rpc ListBankStatements(ListBankStatementsRequest) returns (ListBankStatementsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/bank-statements" };
	}
	rpc ListBankAccounts(ListBankAccountsRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/accounts" };
	}
	rpc ListBusinessPartners(ListBusinessPartnersRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/business-partners" };
	}
	rpc ListSearchModes(ListSearchModesRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/search-modes" };
	}
	// results
	rpc ListImportedBankMovements(ListImportedBankMovementsRequest) returns (ListImportedBankMovementsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/imported-movements" };
	}
	rpc ListPayments(ListPaymentsRequest) returns (ListPaymentsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/payments" };
	}
	rpc ListMatchingMovements(ListMatchingMovementsRequest) returns (ListMatchingMovementsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/matching-movements" };
	}
	rpc ListResultMovements(ListResultMovementsRequest) returns (ListResultMovementsResponse) {
		option (google.api.http) = { get: "/bank-statement-match/movements" };
	}
	// process
	rpc MatchPayments(MatchPaymentsRequest) returns (MatchPaymentsResponse) {
		option (google.api.http) = { 
			post: "/bank-statement-match/match-payments",
			body: "*"
		};
	}
	rpc UnmatchPayments(UnmatchPaymentsRequest) returns (UnmatchPaymentsResponse) {
		option (google.api.http) = { 
			post: "/bank-statement-match/unmatch-payments",
			body: "*"
		};
	}
	rpc ProcessMovements(ProcessMovementsRequest) returns (ProcessMovementsResponse) {
		option (google.api.http) = { 
			post: "/bank-statement-match/process-movements",
			body: "*"
		};
	}
}

// Bank
message Bank {
	int32 id = 1;
	string name = 2;
	string routing_no = 3;
	string swift_code = 4;
}

//	Bank Account
message BankAccount {
	int32 id = 1;
	string name = 2;
	string account_no = 3;
	string account_no_mask = 4;
	Bank bank = 5;
	Currency currency = 6;
	string current_balance = 7;
}

// Bank Statement
message BankStatement {
	int32 id = 1;
	BankAccount bank_account = 2;
	string document_no = 3;
	string name = 4;
	google.protobuf.Timestamp statement_date = 5;
	string description = 6;
	bool is_manual = 7;
	string document_status = 8;
	bool is_processed = 9;
	string beginning_balance = 10;
	string statement_difference = 11;
	string ending_balance = 12;
}

message GetBankStatementRequest {
	int32 id = 1;
}

message ListBankStatementsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListBankStatementsResponse {
	int64 record_count = 1;
	repeated BankStatement records = 2;
	string next_page_token = 3;
}


// Bank Account
message ListBankAccountsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}


// Business Partner
message BusinessPartner {
	int32 id = 1;
	string value = 2;
	string tax_id = 3;
	string name = 4;
	string description = 5;
}

message ListBusinessPartnersRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListBusinessPartnersResponse {
	int64 record_count = 1;
	repeated BusinessPartner records = 2;
	string next_page_token = 3;
}


message ListSearchModesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}


// Payment
message Currency {
	int32 id = 1;
	string iso_code = 2;
	string description = 3;
}

message TenderType {
	int32 id = 1;
	string value = 2;
	string name = 3;
	string description = 4;
}

enum MatchMode {
	MODE_NOT_MATCHED = 0;
	MODE_MATCHED = 1;
}

// Imported Bank Movements
message ListImportedBankMovementsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 bank_statement_id = 8;
	int32 bank_account_id = 9;
	string payment_amount_from = 10;
	string payment_amount_to = 11;
	google.protobuf.Timestamp transaction_date_from = 12;
	google.protobuf.Timestamp transaction_date_to = 13;
	MatchMode match_mode = 14;
}

message ImportedBankMovement {
	int32 id = 1;
	google.protobuf.Timestamp transaction_date = 2;
	bool is_receipt = 3;
	string reference_no = 4;
	BusinessPartner business_partner = 5;
	Currency currency = 6;
	string amount = 7;
	string memo = 8;
	int32 payment_id = 9;
	int32 bank_statement_line_id = 10;
}

message ListImportedBankMovementsResponse {
	int64 record_count = 1;
	repeated ImportedBankMovement records = 2;
	string next_page_token = 3;
}

// Payments Movements
message ListPaymentsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 bank_statement_id = 8;
	int32 bank_account_id = 9;
	int32 business_partner_id = 10;
	string payment_amount_from = 11;
	string payment_amount_to = 12;
	google.protobuf.Timestamp transaction_date_from = 13;
	google.protobuf.Timestamp transaction_date_to = 14;
	MatchMode match_mode = 15;
}

message Payment {
	int32 id = 1;
	google.protobuf.Timestamp transaction_date = 2;
	bool is_receipt = 3;
	string document_no = 4;
	BusinessPartner business_partner = 5;
	TenderType tender_type = 6;
	Currency currency = 7;
	string amount = 8;
	string description = 9;
}

message ListPaymentsResponse {
	int64 record_count = 1;
	repeated Payment records = 2;
	string next_page_token = 3;
}


// Matched Bank/Payment Movements
message ListMatchingMovementsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 bank_statement_id = 8;
	int32 bank_account_id = 9;
	int32 business_partner_id = 10;
	string payment_amount_from = 11;
	string payment_amount_to = 12;
	google.protobuf.Timestamp transaction_date_from = 13;
	google.protobuf.Timestamp transaction_date_to = 14;
	MatchMode match_mode = 15;
}

message MatchingMovement {
	int32 id = 1;
	google.protobuf.Timestamp transaction_date = 2;
	bool is_receipt = 3;
	string document_no = 4;
	BusinessPartner business_partner = 5;
	TenderType tender_type = 6;
	Currency currency = 7;
	string amount = 8;
	string description = 9;
	string reference_no = 10;
	string memo = 11;
	int32 payment_id = 12;
	bool is_automatic = 13;
	string payment_amount = 14;
	google.protobuf.Timestamp payment_date = 15;
}

message ListMatchingMovementsResponse {
	int64 record_count = 1;
	repeated MatchingMovement records = 2;
	string next_page_token = 3;
}


// Result Movement
message ResultMovement {
	int32 id = 1;
	google.protobuf.Timestamp transaction_date = 2;
	bool is_receipt = 3;
	string document_no = 4;
	BusinessPartner business_partner = 5;
	TenderType tender_type = 6;
	Currency currency = 7;
	string amount = 8;
	string description = 9;
	string reference_no = 10;
	string memo = 11;
	int32 payment_id = 12;
	bool is_automatic = 13;
	string payment_amount = 14;
	google.protobuf.Timestamp payment_date = 15;
}

message ListResultMovementsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 bank_statement_id = 8;
	int32 bank_account_id = 9;
	string payment_amount_from = 10;
	string payment_amount_to = 11;
	google.protobuf.Timestamp transaction_date_from = 12;
	google.protobuf.Timestamp transaction_date_to = 13;
}

message ListResultMovementsResponse {
	int64 record_count = 1;
	repeated ResultMovement records = 2;
	string next_page_token = 3;
}


// Payment Bank keys
message KeyMatch {
	int32 payment_id = 1;
	int32 imported_movement_id = 2;
}

message MatchPaymentsRequest {
	repeated KeyMatch key_matches = 1;
}

message MatchPaymentsResponse {
	string message = 1;
}

message UnmatchPaymentsRequest {
	repeated int32 imported_movements_ids = 1;
}

message UnmatchPaymentsResponse {
	string message = 1;
}

message ProcessMovementsRequest {
	int32 bank_statement_id = 1;
	int32 bank_account_id = 2;
	string payment_amount_from = 5;
	string payment_amount_to = 6;
	google.protobuf.Timestamp transaction_date_from = 7;
	google.protobuf.Timestamp transaction_date_to = 8;
}

message ProcessMovementsResponse {
	string message = 1;
}
