/************************************************************************************
 * Copyright (C) 2018-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Edwin Betancourt EdwinBetanc0urt@outlook.com                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
 syntax = "proto3";

 option java_multiple_files = true;
 option java_package = "org.spin.backend.grpc.send_notifications";
 option java_outer_classname = "ADempiereSendNotifications";
 
 import "google/api/annotations.proto";
 import "google/protobuf/struct.proto";
 
 import "base_data_type.proto";
 
 // Base URL
 // /import-loader/
 
 package send_notifications;
 
 service SendNotifications {
	rpc ListUsers(ListUsersRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = {
			get: "/send_notifications/user"
		};
	}

	rpc ListNotificationsTypes(ListNotificationsTypesRequest) returns (ListNotificationsTypesResponse) {
		option (google.api.http) = {
			get: "/send_notifications/notifications_types"
		};
	}

	rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse ) {
		option (google.api.http) = {
            post: "/send_notifications/notification",
			body: "*"
        };
	}
 }
 
 // User List
 message ListUsersRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
}

message ListNotificationsTypesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
}
 
message ListNotificationsTypesResponse {
	int64 record_count = 1;
	repeated NotifcationType records = 2;
	string next_page_token = 3;
}

message NotifcationType {
	string value = 1;
	string name = 2;
	string description = 3;
}
 

message SendNotificationRequest {
	int32 user_id = 1;
	string notification_type = 2;
	string title = 3;
	string body = 4;
	repeated Recipinets recipients = 5;
	string attachments = 8;
}

message Recipinets {
	int32 contact_id = 1;
	string account_name = 2;
}

message SendNotificationResponse {
	int32 notification_id = 1;
}
