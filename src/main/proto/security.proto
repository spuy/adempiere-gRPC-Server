/*************************************************************************************
 * Copyright (C) 2012-2023 E.R.P. Consultores y Asociados, C.A.                      *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                      *
 * This program is free software: you can redistribute it and/or modify              *
 * it under the terms of the GNU General Public License as published by              *
 * the Free Software Foundation, either version 2 of the License, or                 *
 * (at your option) any later version.                                               *
 * This program is distributed in the hope that it will be useful,                   *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                    *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                      *
 * GNU General Public License for more details.                                      *
 * You should have received a copy of the GNU General Public License                 *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.             *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.security";
option java_outer_classname = "ADempiereSecurity";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

package security;

// The greeting service definition.
service Security {
	// Request login from user
	rpc RunLogin(LoginRequest) returns (Session) {
		option (google.api.http) = {
			post: "/security/login",
			body: "*"
		};
	}
	// Request a Role
	rpc RunLogout(LogoutRequest) returns (Session) {
		option (google.api.http) = { post: "/security/logout" };
	}
	// Request user roles from SessionInfo
	rpc GetUserInfo(UserInfoRequest) returns (UserInfo) {
		option (google.api.http) = { get: "/security/user-info" };
	}
	// Request Menu from Parent
	rpc GetMenu(MenuRequest) returns (Menu) {
		option (google.api.http) = { get: "/security/menu" };
	}
	// Request change role
	rpc RunChangeRole(ChangeRoleRequest) returns (Session) {
		option (google.api.http) = {
			put: "/security/change-role",
			body: "*"
		};
	}
	// Request session
	rpc GetSessionInfo(SessionInfoRequest) returns (SessionInfo) {
		option (google.api.http) = { get: "/security/session-info" };
	}
	rpc SetSessionAttribute(SetSessionAttributeRequest) returns (Session) {
		option (google.api.http) = {
			put: "/security/session-attribute",
			body: "*"
		};
	}
	// List Roles
	rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
		option (google.api.http) = { get: "/security/roles" };
	}
	//	List Organizations
	rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
		option (google.api.http) = { get: "/security/organizations" };
	}
	//	Warehouses
	rpc ListWarehouses(ListWarehousesRequest) returns (ListWarehousesResponse) {
		option (google.api.http) = { get: "/security/warehouses" };
	}
	//	Request Language List
	rpc ListLanguages(ListLanguagesRequest) returns (ListLanguagesResponse) {
		option (google.api.http) = { get: "/security/languages" };
	}
	// List Available Services
	rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {
		option (google.api.http) = { get: "/security/services" };
	}
	// Request login from Open ID
	rpc RunLoginOpenID(LoginOpenIDRequest) returns (Session) {
		option (google.api.http) = {
			post: "/security/login-open-id",
			body: "*"
		};
	}
}


//	Token after session
message Session {
	string token = 1;
}


// Request a Login SessionInfo
message LoginRequest {
	string user_name = 1;
	string user_pass = 2;
	string token = 3;
	int32 role_id = 4;
	int32 organization_id = 5;
	int32 warehouse_id = 6;
	string language = 7;
	string client_version = 8;
}

// Request a Logout
message LogoutRequest {
}

// Request a SessionInfo
message SessionInfoRequest {
}


// Language Item
message Language {
	string language = 1;
	string language_name = 2;
	string language_iso = 3;
	string country_code = 4;
	bool is_base_language = 5;
	bool is_system_language = 6;
	bool is_decimal_point = 7;
	string date_pattern = 8;
	string time_pattern = 9;
}

message ListLanguagesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListLanguagesResponse {
	int64 record_count = 1;
	repeated Language languages = 2;
	string next_page_token = 3;
}


// Request a Change Role
message ChangeRoleRequest {
	int32 role_id = 1;
	int32 organization_id = 2;
	int32 warehouse_id = 3;
	string language = 4;
}

// Request User Info
message UserInfoRequest {
}

// Request Menu
message MenuRequest {
}

// User information
message UserInfo {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string comments = 4;
	string image = 5;
	int64 connection_timeout = 6;
}


// SessionInfo
message SessionInfo {
	int32 id = 1;
	string name = 2;
	UserInfo user_info = 3;
	Role role = 4;
	bool processed = 5;
	string language = 6;
	int32 country_id = 7;
	string country_code = 8;
	string country_name = 9;
	string display_sequence = 10;
	string currency_name = 11;
	string currency_iso_code = 12;
	string currency_symbol = 13;
	int32 standard_precision = 14;
	int32 costing_precision = 15;
	google.protobuf.Struct default_context = 16;
}

message SetSessionAttributeRequest {
	string language = 1;
	int32 warehouse_id = 2;
}

message Client {
	int32 id = 1;
	string name = 2;
	string description = 3;
	string logo = 4;
	string logo_report = 5;
	string logo_web = 6;
}

// Role
message Role {
	int32 id = 1;
	string name = 2;
	string description = 3;
	Client client = 4;
	bool is_can_report = 5;
	bool is_can_export = 6;
	bool is_personal_lock = 7;
	bool is_personal_access = 8;
	bool is_allow_info_account = 9;
	bool is_allow_info_business_partner = 10;
	bool is_allow_info_in_out = 11;
	bool is_allow_info_order = 12;
	bool is_allow_info_product = 13;
	bool is_allow_info_schedule = 14;
	bool is_allow_info_mrp = 15;
	bool is_allow_html_view = 16;
	bool is_allow_info_asset = 17;
	bool is_allow_info_cash_journal = 18;
	bool is_allow_info_invoice = 19;
	bool is_allow_info_payment = 20;
	bool is_allow_info_resource = 21;
	bool is_allow_info_crp = 22;
	bool is_allow_xls_view = 23;
	bool is_show_accounting = 24;
}

message ListRolesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListRolesResponse {
	int64 record_count = 1;
	repeated Role roles = 2;
	string next_page_token = 3;
}


// Organization
message Organization {
	int32 id = 1;
	string name = 2;
	string description = 3;
	bool is_read_only = 4;
	string duns = 5;
	string tax_id = 6;
	string phone = 7;
	string phone2 = 8;
	string fax = 9;
	string corporate_branding_image = 10;
}

message ListOrganizationsResponse {
	int64 record_count = 1;
	repeated Organization organizations = 2;
	string next_page_token = 4;
}

message ListOrganizationsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 role_id = 8;
}


// Warehouse
message Warehouse {
	int32 id = 1;
	string name = 2;
	string description = 3;
}

message ListWarehousesResponse {
	int64 record_count = 1;
	repeated Warehouse warehouses = 2;
	string next_page_token = 3;
}

message ListWarehousesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 organization_id = 8;
}


// Menu
message Menu {
	int32 id = 1;
	int32 parent_id = 2;
	string name = 3;
	string description = 4;
	string sequence = 5;
	bool is_active = 6;
	bool is_read_only = 7;
	bool is_summary = 8;
	bool is_s_o_trx = 9;
	string action = 10;
	// Supported References
	int32 reference_id = 11;
	repeated Menu children = 12;
	string reference_uuid = 13;
}

//	Open ID
message ListServicesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ListServicesResponse {
	repeated Service services = 1;
}

message Service {
	int32 id = 1;
	string display_name = 2;
	string authorization_uri = 3;
}

message LoginOpenIDRequest {
	string code_parameter = 1;
	string state_parameter = 2;
	string language = 3;
	string client_version = 4;
}
