/************************************************************************************
 * Copyright (C) 2018-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Edwin Betancourt EdwinBetanc0urt@outlook.com                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.record_management";
option java_outer_classname = "ADempiereRecordManagement";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

// Base URL
// /record-management/

package record_management;

service RecordManagement {
	rpc ToggleIsActiveRecord(ToggleIsActiveRecordRequest) returns (ToggleIsActiveRecordResponse) {
		option (google.api.http) = {
			post: "/record-management/{table_name}/{id}/toogle",
			body: "*"
		};
	}
	rpc ToggleIsActiveRecordsBatch(ToggleIsActiveRecordsBatchRequest) returns (ToggleIsActiveRecordsBatchResponse) {
		option (google.api.http) = {
			post: "/record-management/{table_name}/toogle",
			body: "*"
		};
	}

	// Zoom Window on Record
	rpc ListZoomWindows(ListZoomWindowsRequest) returns (ListZoomWindowsResponse) {
		option (google.api.http) = {
			get: "/record-management/zooms/{table_name}"
			additional_bindings: {
				get: "/record-management/zooms/id/{table_id}"
			}
		};
	}

	// References on Record
	rpc ExistsRecordReferences(ExistsRecordReferencesRequest) returns (ExistsRecordReferencesResponse) {
		option (google.api.http) = { get: "/record-management/references/{tab_id}/{record_id}/exists" };
	}
	rpc ListRecordReferences(ListRecordReferencesRequest) returns (ListRecordReferencesResponse) {
		option (google.api.http) = { get: "/record-management/references/{tab_id}/{record_id}" };
	}
}


// Active/Inactive Record
message ToggleIsActiveRecordRequest {
	string table_name = 1;
	bool is_active = 2;
	int32 id = 3;
}

message ToggleIsActiveRecordsBatchRequest {
	string table_name = 1;
	bool is_active = 2;
	repeated int32 ids = 5;
}

message ToggleIsActiveRecordResponse {
	string message = 1;
}

message ToggleIsActiveRecordsBatchResponse {
	string message = 1;
	int64 total_changes = 2;
}


// Record Reference Zoom Information
message RecordReferenceInfo {
	int32 id = 1;
	string uuid = 2;
	int32 window_id = 3;
	int32 tab_id = 4;
	string table_name = 5;
	string where_clause = 6;
	int64 record_count = 7;
	string column_name = 8;
	string display_name = 9;
	google.protobuf.Value value = 10;
}

message ExistsRecordReferencesRequest {
	int32 tab_id = 1;
	int32 record_id = 2;
}

message ExistsRecordReferencesResponse {
	int32 record_count = 1;
}

message ListRecordReferencesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 tab_id = 8;
	int32 record_id = 9;
}

message ListRecordReferencesResponse {
	int64 record_count = 1;
	repeated RecordReferenceInfo references = 2;
	string next_page_token = 3;
}

//	Zoom Window
message ListZoomWindowsRequest {
	string table_name = 1;
	int32 table_id = 2;
}
message ZoomWindow {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	bool is_sales_transaction = 5;
	// tab
	int32 tab_id = 6;
	string tab_uuid = 7;
	string tab_name = 8;
	bool is_parent_tab = 9;
}
message ListZoomWindowsResponse {
	string table_name = 1;
	int32 table_id = 2;
	string key_column_name = 3;
	repeated string key_columns = 4;
	string display_column_name = 5;
	repeated ZoomWindow zoom_windows = 6;
}
