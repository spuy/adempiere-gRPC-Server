/************************************************************************************
 * Copyright (C) 2018-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Edwin Betancourt EdwinBetanc0urt@outlook.com                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.form.import_file_loader";
option java_outer_classname = "ADempiereImportFileLoader";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

import "base_data_type.proto";

// Base URL
// /import-loader/

package import_file_loader;

service ImportFileLoader {
	rpc ListCharsets(ListCharsetsRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = {
			get: "/import-loader/charsets"
		};
	}
	rpc ListImportTables(ListImportTablesRequest) returns (ListImportTablesResponse) {
		option (google.api.http) = {
			get: "/import-loader/tables"
		};
	}
	rpc ListImportFormats(ListImportFormatsRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = {
			get: "/import-loader/formats/{table_name}"
		};
	}
	rpc GetImportFromat(GetImportFromatRequest) returns (ImportFormat) {
		option (google.api.http) = {
			get: "/import-loader/formats/get/{id}"
		};
	}
	// Manage File
	rpc SaveRecords(SaveRecordsRequest) returns (SaveRecordsResponse) {
		option (google.api.http) = {
			post: "/import-loader/imports/{import_format_id}",
			body: "*"
		};
	}
	rpc ListFilePreview(ListFilePreviewRequest) returns (data.ListEntitiesResponse) {
		option (google.api.http) = {
			get: "/import-loader/imports/resource/preview/{import_format_id}"
		};
	}
	// Process
	rpc ListImportProcesses(ListImportProcessesRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = {
			get: "/import-loader/processes/{table_name}"
		};
	}
}

// Charset
message ListCharsetsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
	bool is_only_active_records = 9;
}


// Import Table
message ListImportTablesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
}

message ImportColumn {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string column_name = 4;
	int32 display_type = 5;
}

message ImportTable {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string table_name = 4;
	repeated ImportColumn import_columns = 5;
}

message ListImportTablesResponse {
	int64 record_count = 1;
	repeated ImportTable records = 2;
	string next_page_token = 3;
}


// Import Format
message ListImportFormatsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
	bool is_only_active_records = 9;
	// custom filters
	string table_name = 10;
}

message ListClientImportFormatsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
	bool is_only_active_records = 9;
	// custom filters
	string table_name = 10;
}

message ImportFormat {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	string table_name = 5;
	string format_type = 6;
	string separator_character = 7;
	repeated FormatField format_fields = 8;
}

message FormatField {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	int32 sequence = 4;
	string column_name = 5;
	string data_type = 6;
	int32 start_no = 7;
	int32 end_no = 8;
	string default_value = 9;
	// number
	string defimal_point = 10;
	bool is_divide_by_100 = 11;
	// date
	string date_format = 12;
	// constant
	string constant_value = 13;
}

// Format Field
message GetImportFromatRequest {
	int32 id = 1;
}


// Preview File
message ListFilePreviewRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	int32 import_format_id = 8;
	string resource_name = 9;
	string charset = 10;
}


// Save Record
message SaveRecordsRequest {
	int32 import_format_id = 1;
	string resource_name = 2;
	string charset = 3;
	// process before save changes
	bool is_process = 4;
	int32 process_id = 5;
	google.protobuf.Struct parameters = 6;
}

message SaveRecordsResponse {
	string message = 1;
	int64 total = 2;
	data.ProcessLog process_log = 3;
}


// Process Import
message ListImportProcessesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
	bool is_only_active_records = 9;
	// custom filters
	string table_name = 10;
}
