/************************************************************************************
 * Copyright (C) 2012-present E.R.P. Consultores y Asociados, C.A.                  *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
 syntax = "proto3";


option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.field";
option java_outer_classname = "ADempiereFieldManagement";

import "base_data_type.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

// Base URL
// /fields/
 
package field;

//	Field Management
service FieldManagementService {
	// Get Default Value
	rpc GetDefaultValue(GetDefaultValueRequest) returns (DefaultValue) {
		option (google.api.http) = {
			get: "/fields/default-value/{table_name}/{column_name}"
			additional_bindings: {
				get: "/fields/default-value/column/{column_id}"
			}
			additional_bindings: {
				get: "/fields/default-value/field/{field_id}"
			}
			additional_bindings: {
				get: "/fields/default-value/parameter/{process_parameter_id}"
			}
			additional_bindings: {
				get: "/fields/default-value/parameter/{process_parameter_to_id}/to"
			}
			additional_bindings: {
				get: "/fields/default-value/query-criteria/{browse_field_id}"
			}
			additional_bindings: {
				get: "/fields/default-value/query-criteria/{browse_field_to_id}/to"
			}
		};
	}
	// List Lookup Item
	rpc ListLookupItems(data.ListLookupItemsRequest) returns (data.ListLookupItemsResponse) {
		option (google.api.http) = {
			get: "/fields/lookups/{table_name}/{column_name}"
			additional_bindings: {
				get: "/fields/lookups/column/{column_id}"
			}
			additional_bindings: {
				get: "/fields/lookups/field/{field_id}"
			}
			additional_bindings: {
				get: "/fields/lookups/parameter/{process_parameter_id}"
			}
			additional_bindings: {
				get: "/fields/lookups/query-criteria/{browse_field_id}"
			}
		};
	}
	// List General Search Records
	rpc ListGeneralSearchRecords(ListGeneralSearchRecordsRequest) returns (data.ListEntitiesResponse) {
		option (google.api.http) = {
			get: "/fields/searchs/{table_name}/{column_name}"
			additional_bindings: {
				get: "/fields/searchs/column/{column_id}"
			}
			additional_bindings: {
				get: "/fields/searchs/field/{field_id}"
			}
			additional_bindings: {
				get: "/fields/searchs/parameter/{process_parameter_id}"
			}
			additional_bindings: {
				get: "/fields/searchs/query-criteria/{browse_field_id}"
			}
		};
	}

	// Windows To Zoom from field
	rpc ListZoomWindows(ListZoomWindowsRequest) returns (ListZoomWindowsResponse) {
		option (google.api.http) = {
			get: "/fields/zooms/{table_name}/{column_name}"
			additional_bindings: {
				get: "/fields/zooms/column/{column_id}"
			}
			additional_bindings: {
				get: "/fields/zooms/field/{field_id}"
			}
			additional_bindings: {
				get: "/fields/zooms/parameter/{process_parameter_id}"
			}
			additional_bindings: {
				get: "/fields/zooms/query-criteria/{browse_field_id}"
			}
		};
	}
	rpc GetZoomParentRecord(GetZoomParentRecordRequest) returns (GetZoomParentRecordResponse) {
		option (google.api.http) = {
			get: "/fields/zooms/record/{window_id}/{tab_id}"
		};
	}
}

// Default Value
message GetDefaultValueRequest {
	// References
	string table_name = 1;
	string column_name = 2;
	int32 column_id = 3;
	int32 field_id = 4;
	int32 process_parameter_id = 5;
	int32 process_parameter_to_id = 6;
	int32 browse_field_id = 7;
	int32 browse_field_to_id = 8;
	string context_attributes = 9;
	google.protobuf.Value value = 10;
}
message DefaultValue {
	int32 id = 1;
	google.protobuf.Struct values = 2;
	bool is_active = 3;
}


// List Search Records Request
message ListGeneralSearchRecordsRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string context_attributes = 8;
	bool is_only_active_records = 9;
	// references
	int32 process_parameter_id = 10;
	int32 field_id = 11;
	int32 browse_field_id = 12;
	int32 reference_id = 13;
	int32 column_id = 14;
	string table_name = 15;
	string column_name = 16;
	//
	bool is_without_validation = 17;
}



//	Zoom Window
message ListZoomWindowsRequest {
	// references
	int32 process_parameter_id = 1;
	int32 field_id = 2;
	int32 browse_field_id = 3;
	int32 reference_id = 4;
	int32 column_id = 5;
	string table_name = 6;
	string column_name = 7;
	// current value
	google.protobuf.Value value = 8;
}
message ZoomWindow {
	int32 id = 1;
	string name = 2;
	string description = 3;
	bool is_sales_transaction = 4;
	int32 tab_id = 5;
	string tab_uuid = 6;
	string tab_name = 7;
	bool is_parent_tab = 8;
}
message ListZoomWindowsResponse {
	string table_name = 1;
	string key_column_name = 2;
	repeated string key_columns = 3;
	string display_column_name = 4;
	repeated string context_column_names = 5;
	repeated ZoomWindow zoom_windows = 6;
}

message GetZoomParentRecordRequest {
	int32 window_id = 1;
	int32 tab_id = 2;
	// current value
	google.protobuf.Value value = 3;
}
message GetZoomParentRecordResponse {
	int32 parent_tab_id = 1;
	string parent_tab_uuid = 2;
	string key_column = 3;
	string name = 4;
	// parent value
	int32 record_id = 5;
}
